name: Build, Push and Deploy dotnet-hello-world application
on:
  push:
    branches:
      - main
    paths:
    - 'dotnet-hello-world/**'
  pull_request:
    branches:
      - main
    paths:
    - 'dotnet-hello-world/**'
jobs:
  build_push_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get branch name
        if: github.event_name != 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
      - name: Get branch name on pull request
        if: github.event_name == 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF#refs/heads/})" >> $GITHUB_ENV
      - name: Download Kore CLI
        run: |
          sudo curl https://storage.googleapis.com/kore-releases/v0.4.0-beta9/kore-cli-linux-amd64 -o /usr/local/bin/kore
          sudo chmod +x /usr/local/bin/kore
      - name: Trigger Kore build and push
        env:
          KORE_SERVER: ${{ secrets.KORE_SERVER }}
          KORE_TEAM: ${{ secrets.KORE_TEAM }}
          KORE_TOKEN: ${{ secrets.DOTNET_KORE_TOKEN }}
        run: |
          echo "Running build from $BRANCH_NAME branch"
          kore run build dotnet-hello-world -t "$KORE_TEAM" -b "$BRANCH_NAME" --tag ${{ github.sha }}
      - name: Get Certificate Authority for Helm to trust the Kubernetes API server
        run: |
          echo "$CA_CERT" > /tmp/ca
          echo "SSL_CERT_FILE=/tmp/ca" >> $GITHUB_ENV
        env:
          CA_CERT: ${{secrets.CA_CERT}}
      - name: Checkout helm chart
        uses: actions/checkout@v2
      - name: Install stable version of Helm
        uses: azure/setup-helm@v1
      - name: Create Helm release
        env:
          HELM_KUBEAPISERVER: ${{ secrets.HELM_KUBEAPISERVER }}
          HELM_KUBETOKEN: ${{ secrets.HELM_KUBETOKEN }}
          HELM_NAMESPACE: ${{ secrets.HELM_NAMESPACE }}
        run: helm upgrade dotnet-hello-world dotnet-hello-world/charts/dotnet-hello-world --install --set image.tag=${{ github.sha }}
