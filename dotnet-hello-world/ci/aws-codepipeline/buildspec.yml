---
version: 0.2

env:
  variables:
    KORE_VERSION: '0.4.0-beta9'
    TRIVY_VERSION: '0.14.0'
    HELM_VERSION: '3.4.2'
  parameter-store:
    KORE_SERVER: "KORE_SERVER"
    KORE_TEAM: "KORE_TEAM"
    KORE_TOKEN: "KORE_TOKEN"
    HELM_KUBEAPISERVER: "HELM_KUBEAPISERVER"
    HELM_KUBETOKEN: "HELM_KUBETOKEN"
    HELM_NAMESPACE: "HELM_NAMESPACE"

phases:
  install:
    commands:
      - curl -sS https://storage.googleapis.com/kore-releases/v$KORE_VERSION/kore-cli-linux-amd64 -o /usr/local/bin/kore && chmod +x /usr/local/bin/kore
      - mkdir trivy && curl -sSL https://github.com/aquasecurity/trivy/releases/download/v$TRIVY_VERSION/trivy_"$TRIVY_VERSION"_Linux-64bit.tar.gz | tar -xz -C trivy/ && mv trivy/trivy /usr/local/bin/ && chmod +x /usr/local/bin/trivy && rm -rf trivy
      - mkdir helm && curl -sSL https://get.helm.sh/helm-v$HELM_VERSION-linux-amd64.tar.gz | tar -xz -C helm/ && mv helm/linux-amd64/helm /usr/local/bin/ && chmod +x /usr/local/bin/trivy && rm -rf helm
      - aws eks update-kubeconfig --name $KORE_TEAM-eks-development --kubeconfig ./kubeconfig --region $AWS_REGION

  build:
    commands:
      - docker build -t docker.io/appvia/kore-example-apps:$CODEBUILD_RESOLVED_SOURCE_VERSION dotnet-hello-world

  post_build:
    commands:
      - "AWS_REGION=$AWS_REGION AWS_ACCOUNT_ID=$(echo $CODEBUILD_BUILD_ARN | awk -F: '{print $5}') trivy image --format template --template \"@dotnet-hello-world/ci/aws-codepipeline/asff.tpl\" -o report.asff docker.io/appvia/kore-example-apps:$CODEBUILD_RESOLVED_SOURCE_VERSION"
      - aws securityhub batch-import-findings --findings file://report.asff --region $AWS_REGION
      - "export BRANCH_NAME=$(echo $CODEBUILD_SOURCE_VERSION | awk -F/ '{print $3}') && kore run build dotnet-hello-world -t $KORE_TEAM -b $BRANCH_NAME --tag $CODEBUILD_RESOLVED_SOURCE_VERSION"
      - helm upgrade dotnet-hello-world dotnet-hello-world/charts/dotnet-hello-world --install --set image.tag=$CODEBUILD_RESOLVED_SOURCE_VERSION --kubeconfig ./kubeconfig
